#!/usr/bin/env python3
# –ü–∞—Ç—á –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±–ª–æ–∂–∫–∏ –≤ –º—ã—Å–ª—è—Ö

# 1. –ù–∞–π–¥–∏—Ç–µ –≤ —Ñ–∞–π–ª–µ —Å—Ç—Ä–æ–∫—É 2074 (elif data == "gen_thought_cover":)
# –ò –∑–∞–º–µ–Ω–∏—Ç–µ –≤–µ—Å—å –±–ª–æ–∫ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ elif/else –Ω–∞:

        elif data == "gen_thought_cover":
            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–±–ª–æ–∂–∫–∏ –¥–ª—è –º—ã—Å–ª–∏
            thought_data = state.get("current_thought")
            if thought_data:
                await query.edit_message_text("üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ–±–ª–æ–∂–∫—É –¥–ª—è –º—ã—Å–ª–∏...")
                
                style_config = IMAGE_STYLES["thoughts"]
                prompt = style_config["prompt_template"].format(topic=thought_data["topic"])
                
                image_url = await generate_image(prompt, style_config["style"])
                
                if image_url:
                    thought_data["image_url"] = image_url
                    state["current_thought"] = thought_data
                    save_state()
                    
                    keyboard = InlineKeyboardMarkup([
                        [InlineKeyboardButton("üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data="publish_thought")],
                        [InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç", callback_data="regen_thought")],
                        [InlineKeyboardButton("üé® –ù–æ–≤–∞—è –æ–±–ª–æ–∂–∫–∞", callback_data="gen_thought_cover")],
                        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_thought")]
                    ])
                    
                    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    await query.message.delete()
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å —Ñ–æ—Ç–æ
                    await context.bot.send_photo(
                        query.message.chat.id,
                        photo=image_url,
                        caption=f"üí≠ <b>–ü–æ—Å—Ç-—Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–µ:</b>\n\n{thought_data['text']}\n\nüé® –û–±–ª–æ–∂–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!",
                        parse_mode=ParseMode.HTML,
                        reply_markup=keyboard
                    )
                else:
                    await query.edit_message_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±–ª–æ–∂–∫–∏")
            return

# 2. –ò—Å–ø—Ä–∞–≤—å—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é publish_thought (–Ω–∞–π–¥–∏—Ç–µ elif data == "publish_thought":)
# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞:

        elif data == "publish_thought":
            # –ü—É–±–ª–∏–∫–∞—Ü–∏—è –º—ã—Å–ª–∏
            thought_data = state.get("current_thought")
            if thought_data:
                try:
                    channel = state.get("channel", TELEGRAM_CHANNEL)
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    if thought_data.get("image_url"):
                        # –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ–±–ª–æ–∂–∫–∞
                        await context.bot.send_photo(
                            channel,
                            thought_data["image_url"],
                            caption=thought_data["text"],
                            parse_mode=ParseMode.HTML
                        )
                    elif thought_data.get("custom_photo"):
                        # –ö–∞—Å—Ç–æ–º–Ω–æ–µ —Ñ–æ—Ç–æ
                        await context.bot.send_photo(
                            channel,
                            thought_data["custom_photo"],
                            caption=thought_data["text"],
                            parse_mode=ParseMode.HTML
                        )
                    else:
                        # –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
                        await context.bot.send_message(
                            channel,
                            thought_data["text"],
                            parse_mode=ParseMode.HTML
                        )
                    
                    await query.edit_message_text("‚úÖ –ú—ã—Å–ª–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã!")
                    state.pop("current_thought", None)
                    save_state()
                except Exception as e:
                    await query.edit_message_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")
            return
