with open('hypebot.py', 'r') as f:
   lines = f.readlines()

# –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å noop
noop_line = None
for i, line in enumerate(lines):
   if 'elif data == "noop":' in line and 'cancel_thought' in ''.join(lines[max(0,i-10):i]):
       noop_line = i
       break

if noop_line:
   # –í—Å—Ç–∞–≤–ª—è–µ–º –ü–ï–†–ï–î noop
   new_block = '''        elif data == "gen_thought_cover":
           # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–±–ª–æ–∂–∫–∏ –¥–ª—è –º—ã—Å–ª–∏
           thought_data = state.get("current_thought")
           if not thought_data:
               await query.answer("‚ùå –î–∞–Ω–Ω—ã–µ –º—ã—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
               return
           
           if "topic" not in thought_data:
               await query.answer("‚ùå –¢–µ–º–∞ –º—ã—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")
               return
           
           await query.edit_message_text("üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ–±–ª–æ–∂–∫—É –¥–ª—è –º—ã—Å–ª–∏...")
           
           try:
               style_config = IMAGE_STYLES["thoughts"]
               prompt = style_config["prompt_template"].format(topic=thought_data["topic"])
               image_url = await generate_image(prompt, style_config["style"])
               
               if image_url:
                   thought_data["image_url"] = image_url
                   state["current_thought"] = thought_data
                   save_state()
                   
                   keyboard = InlineKeyboardMarkup([
                       [InlineKeyboardButton("üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –º—ã—Å–ª—å", callback_data="publish_thought")],
                       [InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", callback_data="gen_thought_cover")],
                       [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="create_thought")]
                   ])
                   
                   await query.message.reply_photo(
                       photo=image_url,
                       caption=f"üé® –û–±–ª–æ–∂–∫–∞ –¥–ª—è –º—ã—Å–ª–∏ –≥–æ—Ç–æ–≤–∞!\\n\\n"
                               f"üí≠ *–¢–µ–º–∞:* {thought_data['topic']}\\n"
                               f"üìù *–¢–µ–∫—Å—Ç:* {thought_data['text'][:100]}...",
                       reply_markup=keyboard,
                       parse_mode="Markdown"
                   )
                   await query.message.delete()
               else:
                   await query.edit_message_text(
                       "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–±–ª–æ–∂–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                       reply_markup=InlineKeyboardMarkup([
                           [InlineKeyboardButton("üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="gen_thought_cover")],
                           [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="create_thought")]
                       ])
                   )
           except Exception as e:
               logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±–ª–æ–∂–∫–∏: {e}")
               await query.edit_message_text(
                   "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±–ª–æ–∂–∫–∏.",
                   reply_markup=InlineKeyboardMarkup([
                       [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="create_thought")]
                   ])
               )

'''
   
   # –í—Å—Ç–∞–≤–ª—è–µ–º –±–ª–æ–∫
   lines.insert(noop_line, new_block)
   
   # –°–æ—Ö—Ä–∞–Ω—è–µ–º
   with open('hypebot_fixed.py', 'w') as f:
       f.writelines(lines)
   
   print(f"‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ hypebot_fixed.py")
   print(f"–ë–ª–æ–∫ –≤—Å—Ç–∞–≤–ª–µ–Ω –ø–µ—Ä–µ–¥ —Å—Ç—Ä–æ–∫–æ–π {noop_line}")
else:
   print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –±–ª–æ–∫ noop –ø–æ—Å–ª–µ cancel_thought")
