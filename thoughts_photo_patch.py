# –ü–∞—Ç—á –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Ñ–æ—Ç–æ –≤ –º—ã—Å–ª–∏

# –ù–∞–π–¥–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é handle_photo –∏ –¥–æ–±–∞–≤—å—Ç–µ –ø–æ—Å–ª–µ waiting_data["type"] == "thoughts":
        
        # –î–ª—è –º—ã—Å–ª–µ–π —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º —Ñ–æ—Ç–æ
        elif waiting_data["type"] == "thoughts_custom_photo":
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ
            photo_file_id = update.message.photo[-1].file_id
            
            thought_text = await gen_caption(
                waiting_data["topic"], 
                "", 
                "sneakers", 
                is_thought=True
            )
            
            hashtags = get_hashtags(waiting_data["topic"], "sneakers")
            final_text = f"{thought_text}\n\n{hashtags}"
            
            keyboard = InlineKeyboardMarkup([
                [InlineKeyboardButton("üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data="publish_thought")],
                [InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", callback_data="regen_thought")],
                [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_thought")]
            ])
            
            state["current_thought"] = {
                "text": final_text,
                "topic": waiting_data["topic"],
                "custom_photo": photo_file_id
            }
            save_state()
            
            await msg.edit_text(
                f"üí≠ <b>–ü–æ—Å—Ç-—Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–µ —Å –≤–∞—à–∏–º —Ñ–æ—Ç–æ:</b>\n\n{final_text}",
                parse_mode=ParseMode.HTML,
                reply_markup=keyboard
            )
