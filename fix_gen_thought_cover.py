#!/usr/bin/env python3
import re
import shutil

# –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
shutil.copy('hypebot.py', 'hypebot_backup.py')

# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞
shutil.copy('hypebot_original.py', 'hypebot.py')

# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
with open('hypebot.py', 'r', encoding='utf-8') as f:
   content = f.read()

# –£–¥–∞–ª—è–µ–º –í–°–ï —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–ª–æ–∫–∏ gen_thought_cover (–µ—Å–ª–∏ –µ—Å—Ç—å)
content = re.sub(
   r'elif data == "gen_thought_cover":.*?(?=elif|else:|except:|finally:|if [^:]+:|$)',
   '',
   content,
   flags=re.DOTALL
)

# –ù–∞—Ö–æ–¥–∏–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
pattern = r'(elif data == "cancel_thought":.*?save_state\(\).*?return)(.*?)(elif data == "noop":)'
match = re.search(pattern, content, re.DOTALL)

if not match:
   print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏!")
   exit(1)

# –ì–æ—Ç–æ–≤–∏–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
new_handler = '''

       elif data == "gen_thought_cover":
           # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–±–ª–æ–∂–∫–∏ –¥–ª—è –º—ã—Å–ª–∏
           thought_data = state.get("current_thought")
           if not thought_data:
               await query.answer("‚ùå –î–∞–Ω–Ω—ã–µ –º—ã—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
               return
           
           if "topic" not in thought_data:
               await query.answer("‚ùå –¢–µ–º–∞ –º—ã—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")
               return
           
           await query.edit_message_text("üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ–±–ª–æ–∂–∫—É –¥–ª—è –º—ã—Å–ª–∏...")
           
           try:
               style_config = IMAGE_STYLES["thoughts"]
               prompt = style_config["prompt_template"].format(topic=thought_data["topic"])
               image_url = await generate_image(prompt, style_config["style"])
               
               if image_url:
                   thought_data["image_url"] = image_url
                   state["current_thought"] = thought_data
                   save_state()
                   
                   keyboard = InlineKeyboardMarkup([
                       [InlineKeyboardButton("üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –º—ã—Å–ª—å", callback_data="publish_thought")],
                       [InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", callback_data="gen_thought_cover")],
                       [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="create_thought")]
                   ])
                   
                   await query.message.reply_photo(
                       photo=image_url,
                       caption=f"üé® –û–±–ª–æ–∂–∫–∞ –¥–ª—è –º—ã—Å–ª–∏ –≥–æ—Ç–æ–≤–∞!\\n\\n"
                               f"üí≠ *–¢–µ–º–∞:* {thought_data['topic']}\\n"
                               f"üìù *–¢–µ–∫—Å—Ç:* {thought_data['text'][:100]}...",
                       reply_markup=keyboard,
                       parse_mode="Markdown"
                   )
                   await query.message.delete()
               else:
                   await query.edit_message_text(
                       "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–±–ª–æ–∂–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                       reply_markup=InlineKeyboardMarkup([
                           [InlineKeyboardButton("üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="gen_thought_cover")],
                           [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="create_thought")]
                       ])
                   )
           except Exception as e:
               logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±–ª–æ–∂–∫–∏: {e}")
               await query.edit_message_text(
                   "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±–ª–æ–∂–∫–∏.",
                   reply_markup=InlineKeyboardMarkup([
                       [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="create_thought")]
                   ])
               )
'''

# –í—Å—Ç–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
new_content = content.replace(
   match.group(0),
   match.group(1) + new_handler + match.group(2) + match.group(3)
)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
with open('hypebot.py', 'w', encoding='utf-8') as f:
   f.write(new_content)

print("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
count = new_content.count('elif data == "gen_thought_cover":')
print(f"üìä –ù–∞–π–¥–µ–Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ gen_thought_cover: {count}")

if count == 1:
   print("‚úÖ –í—Å–µ –æ—Ç–ª–∏—á–Ω–æ! –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
else:
   print("‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!")
