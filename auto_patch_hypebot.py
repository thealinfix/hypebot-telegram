#!/usr/bin/env python3
import re
import sys

# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
with open('hypebot.py', 'r', encoding='utf-8') as f:
    content = f.read()

# 1. –ü–∞—Ç—á –¥–ª—è gen_thought_cover
gen_thought_cover_patch = '''        elif data == "gen_thought_cover":
            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–±–ª–æ–∂–∫–∏ –¥–ª—è –º—ã—Å–ª–∏
            thought_data = state.get("current_thought")
            if thought_data:
                await query.edit_message_text("üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ–±–ª–æ–∂–∫—É –¥–ª—è –º—ã—Å–ª–∏...")
                
                style_config = IMAGE_STYLES["thoughts"]
                prompt = style_config["prompt_template"].format(topic=thought_data["topic"])
                
                image_url = await generate_image(prompt, style_config["style"])
                
                if image_url:
                    thought_data["image_url"] = image_url
                    state["current_thought"] = thought_data
                    save_state()
                    
                    keyboard = InlineKeyboardMarkup([
                        [InlineKeyboardButton("üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data="publish_thought")],
                        [InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç", callback_data="regen_thought")],
                        [InlineKeyboardButton("üé® –ù–æ–≤–∞—è –æ–±–ª–æ–∂–∫–∞", callback_data="gen_thought_cover")],
                        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_thought")]
                    ])
                    
                    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    await query.message.delete()
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å —Ñ–æ—Ç–æ
                    await context.bot.send_photo(
                        query.message.chat.id,
                        photo=image_url,
                        caption=f"üí≠ <b>–ü–æ—Å—Ç-—Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–µ:</b>\\n\\n{thought_data['text']}\\n\\nüé® –û–±–ª–æ–∂–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!",
                        parse_mode=ParseMode.HTML,
                        reply_markup=keyboard
                    )
                else:
                    await query.edit_message_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±–ª–æ–∂–∫–∏")
            return'''

# –ù–∞—Ö–æ–¥–∏–º –∏ –∑–∞–º–µ–Ω—è–µ–º –±–ª–æ–∫ gen_thought_cover
pattern = r'elif data == "gen_thought_cover":\s*\n(?:.*\n)*?.*?return'
content = re.sub(pattern, gen_thought_cover_patch, content, flags=re.MULTILINE | re.DOTALL)

# 2. –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é thoughts_photo_command –ø–µ—Ä–µ–¥ main()
thoughts_photo_func = '''
async def thoughts_photo_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞-—Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º —Ñ–æ—Ç–æ"""
    try:
        user_id = update.message.from_user.id
        if ADMIN_CHAT_ID and user_id != ADMIN_CHAT_ID:
            await update.message.reply_text("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")
            return
        
        if not context.args:
            await update.message.reply_text(
                "üì∏ <b>–°–æ–∑–¥–∞–Ω–∏–µ –º—ã—Å–ª–∏ —Å —Ñ–æ—Ç–æ</b>\\n\\n"
                "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\\n"
                "<code>/thoughtsphoto —Ç–µ–º–∞ –ø–æ—Å—Ç–∞</code>\\n\\n"
                "–ü—Ä–∏–º–µ—Ä:\\n"
                "<code>/thoughtsphoto –Ω–æ–≤—ã–µ Jordan 4 –≤ —á–µ—Ä–Ω–æ–º —Ü–≤–µ—Ç–µ</code>\\n\\n"
                "–ü–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ",
                parse_mode=ParseMode.HTML
            )
            return
        
        topic = " ".join(context.args)
        
        state["waiting_for_image"] = {
            "type": "thoughts_custom_photo",
            "topic": topic,
            "message_id": update.message.message_id
        }
        save_state()
        
        await update.message.reply_text("üì∏ –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è –ø–æ—Å—Ç–∞-—Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è")
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ thoughts_photo_command: {e}")
        await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

'''

# –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥ main()
main_pattern = r'(def main\(\) -> None:)'
content = re.sub(main_pattern, thoughts_photo_func + r'\1', content)

# 3. –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥—ã thoughtsphoto
command_pattern = r'(app\.add_handler\(CommandHandler\("thoughts", thoughts_command\)\))'
content = re.sub(command_pattern, r'\1\n    app.add_handler(CommandHandler("thoughtsphoto", thoughts_photo_command))', content)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
with open('hypebot_patched.py', 'w', encoding='utf-8') as f:
    f.write(content)

print("‚úÖ –ü–∞—Ç—á —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω! –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ hypebot_patched.py")
